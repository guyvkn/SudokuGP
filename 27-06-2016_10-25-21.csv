Genetic Sudoku Experiment
Experiment Time: 27/06/2016 10:25:21
Expirement Parameters:,
Orginal Empty Cells:,45,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,17.0,0.0,9.31,Plus( Plus( Minus( Multi( Multi( countEmptyCellInCol  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Maximum( Multi( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) ) )  Minus( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( div( Plus( Mod( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInRow ) )  Mod( Minimum( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellInCol ) ) )  Minimum( Mod( Minus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Maximum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInCol  *  NumOfOptionsInCell ) * ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum )) - (( numOfOptionsToAppearInBoard  *  countEmptyCellInCol ) Max ( countEmptyCellInRow  Max  NumOfOptionsInCell ))) + ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInCol ) + ( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )))) + (((( NumOfOptionsInCell  %  countEmptyCellInSquare ) + ( NumOfOptionsInCell  *  countEmptyCellInRow )) / (( countEmptyCellInCol  Min  countEmptyCellsInColsContainsNum ) % ( countEmptyCellInSquare  -  countEmptyCellInCol ))) Max ((( numOfOptionsToAppearInBoard  -  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInSquare_ThatNotContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Max  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))))),
