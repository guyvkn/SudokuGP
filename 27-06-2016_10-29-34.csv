Genetic Sudoku Experiment
Experiment Time: 27/06/2016 10:29:34
Expirement Parameters:,
Orginal Empty Cells:,46,
Population Size:,5,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,17.0,6.0,11.4,Minus( Plus( Minus( Minus( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Mod( Maximum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Mod( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellInSquare  Min  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellInRow  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  +  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  Max  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  +  countEmptyCellsInSquare_ThatNotContainsNum )))) - (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
1,13.0,6.0,9.0,Minus( Plus( Minus( Minus( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Mod( Maximum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Mod( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellInSquare  Min  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellInRow  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  +  countEmptyCellInSquare ) Max ( countEmptyCellInSquare  Max  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInSquare  +  countEmptyCellsInSquare_ThatNotContainsNum )))) - (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
2,13.0,5.0,8.8,Maximum( Minimum( Mod( Mod( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare ) ) )  div( Mod( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) % (( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInSquare ))) Min ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInCol  *  countEmptyCellsInSquareContainsNum )) / (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
3,11.0,5.0,8.0,Maximum( Minimum( Mod( Mod( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare ) ) )  div( Mod( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) % (( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  /  countEmptyCellInSquare ))) Min ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellInCol  *  countEmptyCellsInSquareContainsNum )) / (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
4,11.0,5.0,8.0,Maximum( div( Minimum( Multi( Plus( NumOfOptionsInCell  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  numOfOptionsToAppearInBoard ) )  Multi( div( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Plus( Mod( Maximum( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInCol )  div( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInSquare ) * ( NumOfOptionsInCell  Min  numOfOptionsToAppearInBoard )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquare_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquare_ThatNotContainsNum ))) / ((( numOfOptionsToAppearInBoard  Max  countEmptyCellInSquare ) % ( countEmptyCellsInColsContainsNum  +  countEmptyCellInRow )) + (( countEmptyCellInCol  +  countEmptyCellInCol ) + ( countEmptyCellInSquare  /  countEmptyCellsInColsContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
5,12.0,5.0,8.8,Maximum( div( Minimum( Multi( Plus( NumOfOptionsInCell  countEmptyCellInSquare )  Minimum( NumOfOptionsInCell  numOfOptionsToAppearInBoard ) )  Multi( div( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Plus( Mod( Maximum( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInCol )  div( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Plus( Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInRow ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInSquare ) * ( NumOfOptionsInCell  Min  numOfOptionsToAppearInBoard )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquare_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquare_ThatNotContainsNum ))) / ((( numOfOptionsToAppearInBoard  Max  countEmptyCellInSquare ) % ( countEmptyCellsInColsContainsNum  +  countEmptyCellInRow )) + (( countEmptyCellInCol  +  countEmptyCellInCol ) + ( countEmptyCellInSquare  /  countEmptyCellsInColsContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ) + ( numOfOptionsToAppearInBoard  Max  countEmptyCellInRow ))))),
6,11.0,5.0,7.4,Maximum( Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
7,11.0,5.0,7.4,Maximum( Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
8,11.0,5.0,7.2,Maximum( Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
9,11.0,5.0,7.6,Maximum( Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Maximum( Plus( Multi( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Minimum( Maximum( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) + (( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Max ((( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInColsContainsNum  *  NumOfOptionsInCell )) Min (( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
10,16.0,8.0,10.6,Maximum( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) Max (((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
11,13.0,4.0,8.0,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
12,10.0,4.0,7.4,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( div( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( div( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) - ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
13,10.0,7.0,8.0,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
14,10.0,7.0,8.4,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
15,10.0,7.0,8.2,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
16,8.0,7.0,7.8,Minus( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) - (((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
17,8.0,6.0,7.4,Maximum( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
18,8.0,6.0,7.0,Maximum( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
19,8.0,6.0,7.0,Maximum( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
20,8.0,5.0,6.6,Multi( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) * (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
21,8.0,5.0,6.2,Multi( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) * (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
22,10.0,5.0,7.0,Multi( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) * (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
23,8.0,5.0,6.4,Multi( Minus( Minimum( Multi( Minus( countEmptyCellInSquare  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Plus( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Plus( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellInCol  countEmptyCellInCol ) )  Plus( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInSquare  -  countEmptyCellInSquare ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInSquare )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInSquare ) + ( countEmptyCellInCol  Min  countEmptyCellInCol )) + (( countEmptyCellsInColsContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum )))) * (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
24,9.0,2.0,6.2,Multi( Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  div( Maximum( Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare )))) * (((( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Max  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))))),
25,8.0,3.0,5.8,Minus( div( Maximum( Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Max  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInCol )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
26,6.0,2.0,4.6,Multi( div( Maximum( Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Max  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
27,6.0,3.0,5.4,Minimum( Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Plus( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) )  Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellInCol  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare )))) Min (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellInCol  +  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInCol )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) + ( countEmptyCellInCol  Max  countEmptyCellInSquare ))))),
28,6.0,0.0,3.0,Minus( div( Maximum( Multi( Minimum( NumOfOptionsInCell  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minus( Plus( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Multi( Maximum( Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) )  Minus( Plus( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  Min  countEmptyCellInSquare ) * ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  Max  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInColsContainsNum )) - (( numOfOptionsToAppearInBoard  *  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInRowsContainsNum ))))),
