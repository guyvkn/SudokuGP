Genetic Sudoku Experiment
Experiment Time: 26/06/2016 12:20:40
Expirement Parameters:,
Orginal Empty Cells:,52,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,17.0,2.0,11.07,Plus( Minimum( Plus( Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) )  Plus( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) )  div( div( Minimum( countEmptyCellInRow  countEmptyCellInSquare )  Minus( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) )  Multi( Plus( Minus( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( div( countEmptyCellInCol  NumOfOptionsInCell )  div( countEmptyCellInRow  countEmptyCellInSquare ) ) )  Multi( Minus( Multi( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) )  Mod( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ) * ( numOfOptionsToAppearInBoard  Max  countEmptyCellInCol )) + (( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInCol  Min  countEmptyCellsInColsContainsNum ))) Min ((( countEmptyCellInRow  Min  countEmptyCellInSquare ) / ( NumOfOptionsInCell  -  countEmptyCellsInRows_ThatNotContainsNum )) / (( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ) / ( NumOfOptionsInCell  *  countEmptyCellsInSquare_ThatNotContainsNum )))) + (((( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) - ( numOfOptionsToAppearInBoard  -  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellInCol  /  NumOfOptionsInCell ) - ( countEmptyCellInRow  /  countEmptyCellInSquare ))) * ((( countEmptyCellInRow  *  countEmptyCellsInRows_ThatNotContainsNum ) - ( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInSquare ) % ( countEmptyCellsInColsContainsNum  Min  NumOfOptionsInCell ))))),
1,19.0,2.0,10.68,Minimum( Minus( div( Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Mod( countEmptyCellInRow  NumOfOptionsInCell ) )  Minimum( Maximum( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Multi( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) )  Multi( div( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) )  Mod( div( Plus( Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellInCol ) )  Multi( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Maximum( Multi( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Max  NumOfOptionsInCell ) + ( countEmptyCellInRow  %  NumOfOptionsInCell )) / (( countEmptyCellInSquare  Max  countEmptyCellsInRows_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  *  countEmptyCellInCol ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInCol  Min  countEmptyCellsInColsContainsNum )))) Min (((( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ) + ( NumOfOptionsInCell  /  countEmptyCellInCol )) / (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))) % ((( countEmptyCellsInColsContainsNum  *  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
2,20.0,4.0,10.88,Minus( Multi( Mod( Minus( Plus( NumOfOptionsInCell  NumOfOptionsInCell )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Maximum( Maximum( countEmptyCellInSquare  countEmptyCellInCol )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Multi( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Minus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  div( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) ) ) )  Minimum( Minimum( Plus( Multi( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Mod( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Minus( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Plus( countEmptyCellInRow  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  NumOfOptionsInCell ) - ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellInSquare  Max  countEmptyCellInCol ) Max ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell ))) * ((( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellInSquare )) * (( numOfOptionsToAppearInBoard  Min  countEmptyCellInSquare ) - ( numOfOptionsToAppearInBoard  /  numOfOptionsToAppearInBoard )))) - (((( countEmptyCellInSquare  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  NumOfOptionsInCell )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) Min ( countEmptyCellInRow  %  countEmptyCellsInRowsContainsNum ))) Min ((( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare ) - ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum )) + (( NumOfOptionsInCell  -  numOfOptionsToAppearInBoard ) - ( countEmptyCellInRow  +  countEmptyCellInSquare ))))),
3,17.0,3.0,10.64,Plus( Mod( div( Plus( Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellInCol ) )  Multi( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Maximum( Multi( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  Multi( Multi( Plus( Plus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellInRow  NumOfOptionsInCell ) )  Minus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Maximum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ) + ( NumOfOptionsInCell  /  countEmptyCellInCol )) / (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))) % ((( countEmptyCellsInColsContainsNum  *  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( countEmptyCellInRow  +  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  %  NumOfOptionsInCell )) * (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInRow  Min  countEmptyCellsInRowsContainsNum ))) * ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInColsContainsNum  +  countEmptyCellInRow ) Min ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
4,20.0,2.0,10.12,Multi( Minimum( Minimum( Plus( Minus( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellInSquare ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Plus( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Mod( Minimum( countEmptyCellInSquare  countEmptyCellInCol )  Minus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) ) )  Minus( Maximum( Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInSquare  countEmptyCellInCol ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Minimum( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellInRow  -  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellInSquare )) Min (( countEmptyCellInCol  +  countEmptyCellInSquare ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ))) Min ((( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInRowsContainsNum  +  NumOfOptionsInCell )) - (( countEmptyCellInSquare  Min  countEmptyCellInCol ) % ( NumOfOptionsInCell  -  countEmptyCellsInSquareContainsNum )))) * (((( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellInSquare  *  countEmptyCellInCol )) Max (( countEmptyCellInCol  +  countEmptyCellInSquare ) + ( NumOfOptionsInCell  *  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInCol  Max  countEmptyCellInRow )) * (( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) - ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow ))))),
5,18.0,2.0,9.13,Multi( Minimum( Minimum( Plus( Minus( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellInSquare ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInSquare )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Plus( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  Mod( Minimum( countEmptyCellInSquare  countEmptyCellInCol )  Minus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) ) )  Minus( Maximum( Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInSquare  countEmptyCellInCol ) )  Plus( Plus( countEmptyCellInCol  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Minimum( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellInRow ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  div( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellInRow  -  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellInSquare )) Min (( countEmptyCellInCol  +  countEmptyCellInSquare ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ))) Min ((( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInRowsContainsNum  +  NumOfOptionsInCell )) - (( countEmptyCellInSquare  Min  countEmptyCellInCol ) % ( NumOfOptionsInCell  -  countEmptyCellsInSquareContainsNum )))) * (((( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellInSquare  *  countEmptyCellInCol )) Max (( countEmptyCellInCol  +  countEmptyCellInSquare ) + ( NumOfOptionsInCell  *  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInCol  Max  countEmptyCellInRow )) * (( countEmptyCellsInColsContainsNum  /  countEmptyCellInRow ) - ( countEmptyCellsInRowsContainsNum  /  countEmptyCellInRow ))))),
6,20.0,2.0,8.99,Mod( Mod( div( Plus( Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  div( NumOfOptionsInCell  countEmptyCellInCol ) )  Multi( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minus( Maximum( Multi( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  Multi( Minus( Mod( Mod( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum ) )  Minus( Plus( countEmptyCellInRow  countEmptyCellInCol )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Multi( Plus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ) + ( NumOfOptionsInCell  /  countEmptyCellInCol )) / (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  %  countEmptyCellsInSquare_ThatNotContainsNum ))) % ((( countEmptyCellsInColsContainsNum  *  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) % (((( countEmptyCellInRow  %  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInSquareContainsNum )) - (( countEmptyCellInRow  +  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInSquare ))) * ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) + ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  Max  NumOfOptionsInCell ))))),
7,17.0,0.0,8.41,Maximum( Multi( Minimum( Multi( Plus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Maximum( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Minimum( div( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum )  div( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) )  div( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare ) ) ) )  Minimum( Minimum( Plus( Multi( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Minimum( countEmptyCellInRow  NumOfOptionsInCell )  Mod( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Minus( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Plus( countEmptyCellInRow  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellInCol  +  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellInRow  Max  countEmptyCellInRow ) + ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  /  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  /  countEmptyCellsInRowsContainsNum )) * (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInRow ) / ( countEmptyCellsInSquareContainsNum  -  countEmptyCellInSquare )))) Max (((( countEmptyCellInSquare  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  NumOfOptionsInCell )) Min (( countEmptyCellInRow  Min  NumOfOptionsInCell ) Min ( countEmptyCellInRow  %  countEmptyCellsInRowsContainsNum ))) Min ((( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare ) - ( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum )) + (( NumOfOptionsInCell  -  numOfOptionsToAppearInBoard ) - ( countEmptyCellInRow  +  countEmptyCellInSquare ))))),
