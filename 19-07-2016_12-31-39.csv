Genetic Sudoku Experiment
Experiment Time: 19/07/2016 12:31:39
Expirement Parameters:,
Orginal Empty Cells:,55,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,22.0,5.0,11.95,Minus( Mod( Minus( Minimum( div( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard ) )  Plus( div( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Maximum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Mod( NumOfOptionsInCell  NumOfOptionsInCell ) )  Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Plus( Minus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) )  Minimum( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) ) )  Plus( Plus( div( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Maximum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  /  numOfOptionsToAppearInBoard ) Min ( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard )) - (( numOfOptionsToAppearInBoard  /  NumOfOptionsInCell ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ))) % ((( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  %  NumOfOptionsInCell )) Max (( numOfOptionsToAppearInBoard  Max  countEmptyCellInRow ) - ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInColsContainsNum )))) - (((( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) / ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol )) - (( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInSquare ) Min ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell ))) + ((( NumOfOptionsInCell  /  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInCol  +  countEmptyCellsInRows_ThatNotContainsNum ))))),
1,22.0,3.0,12.22,div( Minus( Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Multi( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Maximum( Mod( Plus( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellInRow  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Multi( Maximum( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellInSquare )) - (( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell )))) / (((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  -  countEmptyCellInRow )) % (( countEmptyCellsInCols_ThatNotContainsNum  +  NumOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInRow  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellInCol  Max  countEmptyCellsInRows_ThatNotContainsNum ))))),
2,20.0,2.0,11.43,Minus( Minimum( Minimum( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Multi( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Plus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Maximum( Maximum( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) ) )  Plus( Minus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) )  Minimum( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare )  Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) ) )  Plus( Plus( div( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) )  Maximum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) * ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  *  numOfOptionsToAppearInBoard ) / ( numOfOptionsToAppearInBoard  -  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( countEmptyCellInRow  +  countEmptyCellInSquare ) + ( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard )) Min (( countEmptyCellInCol  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard )))) - (((( countEmptyCellsInColsContainsNum  /  countEmptyCellInCol ) / ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInCol )) - (( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInSquare ) Min ( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell ))) + ((( NumOfOptionsInCell  /  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellInCol  +  countEmptyCellsInRows_ThatNotContainsNum ))))),
3,21.0,5.0,12.12,Multi( Maximum( Mod( Plus( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellInRow  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Multi( Maximum( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  div( Maximum( Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( div( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) )  Plus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Mod( Mod( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  -  countEmptyCellInRow )) % (( countEmptyCellsInCols_ThatNotContainsNum  +  NumOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInRow  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellInCol  Max  countEmptyCellsInRows_ThatNotContainsNum )))) * (((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellInRow  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellInCol  Max  countEmptyCellsInColsContainsNum ))) / ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell )) + (( numOfOptionsToAppearInBoard  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum ))))),
4,18.0,2.0,11.21,Maximum( Minimum( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  Minus( Minimum( Maximum( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) )  Minimum( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell )) % (( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard )))) Max (((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInCol ) % ( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ))) - ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) / ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellInSquare ) * ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInColsContainsNum ))))),
5,20.0,6.0,10.9,Maximum( Minus( Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Multi( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Maximum( Mod( Plus( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellInRow  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) ) )  Minimum( Multi( Maximum( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  div( Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  Max  NumOfOptionsInCell )) - (( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  -  countEmptyCellInRow )) % (( countEmptyCellsInCols_ThatNotContainsNum  +  NumOfOptionsInCell ) Min ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquareContainsNum ))) Max ((( countEmptyCellInRow  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellInCol  Max  countEmptyCellsInRows_ThatNotContainsNum ))))),
6,17.0,4.0,10.64,div( div( Maximum( Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Multi( Maximum( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellInRow  countEmptyCellInSquare ) ) )  Plus( div( div( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Mod( Mod( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  div( Multi( Plus( Minus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) )  div( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare ) ) )  Minimum( Minus( Multi( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Multi( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInRow  countEmptyCellInRow ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellInCol  Max  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellInRow  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell )) + (( numOfOptionsToAppearInBoard  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellInRow  Max  countEmptyCellsInRows_ThatNotContainsNum )))) / (((( NumOfOptionsInCell  -  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInRow )) * (( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInSquare ))) / ((( countEmptyCellsInCols_ThatNotContainsNum  *  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellInRow  -  countEmptyCellInRow ))))),
7,20.0,2.0,10.32,Plus( Minus( Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) )  Multi( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Mod( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( Minimum( Multi( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Minimum( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellInSquare )) - (( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell )))) + (((( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) + ( numOfOptionsToAppearInBoard  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInColsContainsNum ) % ( countEmptyCellInCol  *  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellInCol  *  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInRowsContainsNum  Min  countEmptyCellInSquare ) Min ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))))),
8,18.0,2.0,10.22,Minus( Minus( Minimum( Maximum( Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Mod( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) )  Minimum( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInCol ) % ( countEmptyCellsInColsContainsNum  -  numOfOptionsToAppearInBoard ))) - ((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquareContainsNum ) / ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellInSquare ) * ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInColsContainsNum )))) - (((( NumOfOptionsInCell  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell )) % (( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard ))))),
9,20.0,2.0,9.78,Multi( Plus( Maximum( Maximum( Multi( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minimum( countEmptyCellInSquare  countEmptyCellInRow )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( div( Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellInRow  *  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellInSquare  Min  countEmptyCellInRow ) - ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell ) / ( countEmptyCellsInSquareContainsNum  *  numOfOptionsToAppearInBoard )) - (( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ) % ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInColsContainsNum )))) * (((( NumOfOptionsInCell  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell )) % (( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard ))))),
10,23.0,2.0,9.26,Multi( Plus( Maximum( Maximum( Multi( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minimum( countEmptyCellInSquare  countEmptyCellInRow )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Minus( div( Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) )  Mod( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInRow  *  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellInSquare  Min  countEmptyCellInRow ) - ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))) + ((( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell ) / ( countEmptyCellsInSquareContainsNum  *  numOfOptionsToAppearInBoard )) - (( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ) % ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInColsContainsNum )))) * (((( NumOfOptionsInCell  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell )) % (( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ))))),
11,21.0,0.0,9.06,div( Minimum( Maximum( Minimum( Minus( NumOfOptionsInCell  countEmptyCellInRow )  Plus( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( div( div( NumOfOptionsInCell  countEmptyCellInSquare )  div( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Multi( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) ) )  Maximum( Plus( Plus( Maximum( countEmptyCellInCol  countEmptyCellInSquare )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Multi( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellInSquare ) ) )  Maximum( Minus( Multi( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) )  Plus( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  -  countEmptyCellInRow ) Min ( countEmptyCellInSquare  +  countEmptyCellsInRows_ThatNotContainsNum )) Max (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  /  countEmptyCellInSquare ) / ( countEmptyCellsInSquare_ThatNotContainsNum  /  NumOfOptionsInCell )) % (( countEmptyCellInRow  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  %  numOfOptionsToAppearInBoard )))) / (((( countEmptyCellInCol  Max  countEmptyCellInSquare ) + ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) * ( NumOfOptionsInCell  -  countEmptyCellInSquare ))) Max ((( numOfOptionsToAppearInBoard  *  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellInCol )) Max (( countEmptyCellsInColsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ))))),
