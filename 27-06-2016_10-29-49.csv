Genetic Sudoku Experiment
Experiment Time: 27/06/2016 10:29:49
Expirement Parameters:,
Orginal Empty Cells:,52,
Population Size:,5,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,18.0,8.0,11.6,Multi( Minimum( Plus( Maximum( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  Plus( Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellInRow ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minimum( Maximum( Minus( Minimum( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) )  Plus( Minimum( Minimum( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Plus( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) + (( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  Min  countEmptyCellInRow ))) Min ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum )))) * (((( countEmptyCellsInRowsContainsNum  Min  NumOfOptionsInCell ) - ( countEmptyCellsInColsContainsNum  /  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell ))) Min ((( NumOfOptionsInCell  Min  numOfOptionsToAppearInBoard ) Min ( countEmptyCellInRow  *  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellInCol ))))),
1,13.0,9.0,11.4,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  Minimum( Maximum( Minus( Minimum( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) )  Plus( Minimum( Minimum( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Plus( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellInCol ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) - (((( countEmptyCellsInRowsContainsNum  Min  NumOfOptionsInCell ) - ( countEmptyCellsInColsContainsNum  /  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell ))) Min ((( NumOfOptionsInCell  Min  numOfOptionsToAppearInBoard ) Min ( countEmptyCellInRow  *  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellInCol ))))),
2,14.0,8.0,11.4,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  Minimum( Maximum( Minus( Minimum( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) )  Plus( Minimum( Minimum( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Plus( Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellInCol ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) + (((( countEmptyCellsInRowsContainsNum  Min  NumOfOptionsInCell ) - ( countEmptyCellsInColsContainsNum  /  NumOfOptionsInCell )) Max (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell ))) Min ((( NumOfOptionsInCell  Min  numOfOptionsToAppearInBoard ) Min ( countEmptyCellInRow  *  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellInCol ))))),
3,9.0,7.0,7.8,Minus( Multi( Maximum( Plus( Mod( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Minimum( Maximum( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Mod( Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellInSquare  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  NumOfOptionsInCell ) + ( numOfOptionsToAppearInBoard  Min  countEmptyCellInSquare )) Max (( countEmptyCellInCol  Max  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow ) * ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellInSquare  %  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  Min  numOfOptionsToAppearInBoard )))) - (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare ))))),
4,10.0,7.0,8.6,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare ))))),
5,16.0,6.0,9.6,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  Minimum( Plus( Maximum( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  Plus( Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellInRow ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) + (( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  Min  countEmptyCellInRow ))) Min ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ))))),
6,11.0,6.0,7.8,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  Minimum( Plus( Maximum( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) )  Plus( Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellInRow  countEmptyCellInRow ) ) )  Minimum( Minimum( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell )) + (( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  Min  countEmptyCellInRow ))) Min ((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  *  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) / ( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ))))),
7,10.0,6.0,7.8,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  Plus( Plus( Minimum( Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Multi( Multi( countEmptyCellInSquare  countEmptyCellInRow )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Mod( Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInCol  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) - (((( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard )) + (( countEmptyCellInSquare  *  countEmptyCellInRow ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ))) + ((( NumOfOptionsInCell  Max  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellInCol  /  countEmptyCellInRow )) % (( countEmptyCellInSquare  +  numOfOptionsToAppearInBoard ) Min ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ))))),
8,10.0,5.0,6.8,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
9,14.0,6.0,8.6,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  Plus( Plus( Minimum( Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Multi( Multi( countEmptyCellInSquare  countEmptyCellInRow )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Mod( Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInCol  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) + (((( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard )) + (( countEmptyCellInSquare  *  countEmptyCellInRow ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ))) + ((( NumOfOptionsInCell  Max  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellInCol  /  countEmptyCellInRow )) % (( countEmptyCellInSquare  +  numOfOptionsToAppearInBoard ) Min ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ))))),
10,14.0,6.0,8.2,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  Plus( Plus( Minimum( Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Multi( Multi( countEmptyCellInSquare  countEmptyCellInRow )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Mod( Minimum( Maximum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInCol  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) - (((( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard )) + (( countEmptyCellInSquare  *  countEmptyCellInRow ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ))) + ((( NumOfOptionsInCell  Max  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellInCol  /  countEmptyCellInRow )) % (( countEmptyCellInSquare  +  numOfOptionsToAppearInBoard ) Min ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum ))))),
11,13.0,5.0,9.2,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
12,10.0,5.0,7.2,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare ))))),
13,14.0,5.0,7.2,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare ))))),
14,14.0,5.0,7.4,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare ))))),
15,14.0,5.0,7.6,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
16,15.0,5.0,10.2,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
17,14.0,5.0,8.4,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
18,14.0,5.0,8.4,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Plus( Minus( Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell )  Minus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( countEmptyCellInSquare  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ) - ( countEmptyCellInSquare  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) Min ( countEmptyCellInSquare  Max  countEmptyCellInSquare )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
19,17.0,6.0,10.8,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
20,17.0,6.0,9.8,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
21,18.0,6.0,9.2,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
22,14.0,6.0,8.4,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
23,17.0,5.0,9.6,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minus( div( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  Minus( Multi( div( Minimum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell ) ) )  div( Mod( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInRow  NumOfOptionsInCell ) )  Maximum( Mod( countEmptyCellInRow  countEmptyCellInSquare )  Plus( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( NumOfOptionsInCell  /  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) Min (((( countEmptyCellsInColsContainsNum  Min  NumOfOptionsInCell ) / ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInColsContainsNum )) * (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellsInSquare_ThatNotContainsNum  -  NumOfOptionsInCell ))) - ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellInRow  *  NumOfOptionsInCell )) / (( countEmptyCellInRow  %  countEmptyCellInSquare ) Max ( countEmptyCellInRow  +  countEmptyCellsInRowsContainsNum ))))),
24,14.0,4.0,7.8,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minus( div( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) - (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( NumOfOptionsInCell  /  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
25,16.0,6.0,10.8,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
26,19.0,6.0,9.0,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
27,15.0,6.0,7.8,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
28,15.0,6.0,8.6,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
29,15.0,6.0,8.2,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
30,8.0,6.0,6.8,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
31,12.0,6.0,8.0,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
32,12.0,6.0,8.0,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
33,18.0,7.0,11.0,Plus( div( Multi( Maximum( Mod( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Minus( div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellInRow  %  NumOfOptionsInCell ) Max ( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
34,14.0,6.0,8.6,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
35,8.0,5.0,6.6,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Multi( Maximum( Mod( countEmptyCellInRow  NumOfOptionsInCell )  Plus( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Minus( div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) Min (((( countEmptyCellInRow  %  NumOfOptionsInCell ) Max ( countEmptyCellInSquare  +  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRows_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
36,11.0,4.0,7.0,Plus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) + (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
37,14.0,5.0,9.0,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
38,14.0,4.0,7.6,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  *  countEmptyCellInSquare ))))),
39,15.0,5.0,7.8,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
40,7.0,5.0,6.0,Multi( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( Mod( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRowsContainsNum  %  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum ))))),
41,14.0,5.0,8.0,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Maximum( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( NumOfOptionsInCell  Max  countEmptyCellsInSquare_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  *  countEmptyCellInSquare )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
42,15.0,5.0,8.0,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
43,10.0,6.0,7.6,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
44,14.0,4.0,7.2,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Multi( Minimum( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) - (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellInSquare  /  NumOfOptionsInCell ))))),
45,14.0,4.0,7.4,Minus( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minimum( Minimum( Multi( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Plus( div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Multi( Minimum( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow )  Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellInSquare  NumOfOptionsInCell ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellInRow  *  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInRow  Max  countEmptyCellsInSquareContainsNum )))) - (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInRow ) Min ( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellInSquare  /  NumOfOptionsInCell ))))),
46,12.0,6.0,8.2,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
47,14.0,6.0,9.8,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Mod( Maximum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ) + ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))))),
48,13.0,4.0,7.2,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol ))))),
49,14.0,4.0,8.2,Minimum( div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  div( Minus( Plus( Plus( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) ) )  Minus( Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Maximum( div( NumOfOptionsInCell  countEmptyCellInRow )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) ) ),((((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol )))) Min (((( NumOfOptionsInCell  +  countEmptyCellInCol ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )) - (( countEmptyCellInCol  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum ))) / ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInSquareContainsNum  -  NumOfOptionsInCell )) - (( NumOfOptionsInCell  /  countEmptyCellInRow ) Max ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInCol ))))),
