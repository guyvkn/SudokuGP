Genetic Sudoku Experiment
Experiment Time: 26/06/2016 12:40:56
Expirement Parameters:,
Orginal Empty Cells:,53,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,19.0,2.0,10.46,Plus( Plus( div( div( Mod( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell )  div( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  div( Minus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Maximum( Maximum( countEmptyCellInCol  countEmptyCellInSquare )  div( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Maximum( Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Minus( Maximum( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minimum( Mod( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) ) )  Multi( Minimum( Multi( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInRow ) )  Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  %  NumOfOptionsInCell ) / ( countEmptyCellInCol  /  countEmptyCellsInSquare_ThatNotContainsNum )) / (( numOfOptionsToAppearInBoard  -  countEmptyCellInRow ) / ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum ))) + ((( countEmptyCellInCol  Max  countEmptyCellInSquare ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInRows_ThatNotContainsNum )) + (( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellInSquare  %  countEmptyCellsInColsContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  Max  NumOfOptionsInCell ) Max ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) - (( NumOfOptionsInCell  %  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ))) Min ((( countEmptyCellsInRowsContainsNum  *  NumOfOptionsInCell ) Min ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInRow )) * (( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ))))),
1,19.0,2.0,10.2,Multi( Maximum( div( Minimum( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellInSquare ) ) )  Mod( Maximum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) )  Minus( Maximum( Minus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Maximum( countEmptyCellInSquare  countEmptyCellInRow )  Mod( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) )  Multi( Plus( Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  div( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum )) / (( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare ) / ( countEmptyCellInCol  *  countEmptyCellInSquare ))) Max ((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInColsContainsNum ) Max ( numOfOptionsToAppearInBoard  /  countEmptyCellsInRows_ThatNotContainsNum )) % (( countEmptyCellsInSquareContainsNum  %  countEmptyCellInCol ) / ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum )))) * (((( countEmptyCellsInColsContainsNum  +  countEmptyCellInCol ) - ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum )) Max (( countEmptyCellInSquare  Max  countEmptyCellInRow ) Min ( countEmptyCellInRow  %  countEmptyCellsInRowsContainsNum ))) - ((( countEmptyCellsInColsContainsNum  +  countEmptyCellsInRows_ThatNotContainsNum ) + ( numOfOptionsToAppearInBoard  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInCol  +  countEmptyCellsInSquareContainsNum ))))),
2,19.0,2.0,10.1,Plus( div( Plus( Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) )  Minus( Mod( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) )  Minus( Multi( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( countEmptyCellInSquare  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInRow ) ) ) )  Minus( Mod( Minus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  Multi( Plus( Mod( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Mod( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  Max  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInColsContainsNum  %  countEmptyCellInCol ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  %  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellInCol  %  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellInRow )))) + (((( countEmptyCellsInSquareContainsNum  -  countEmptyCellInSquare ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInRow )) % (( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ) % ( countEmptyCellsInRowsContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInColsContainsNum  %  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInSquare )) * (( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))))),
3,19.0,4.0,9.75,Plus( Minimum( Multi( Minus( Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( div( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) )  Minus( Mod( Minus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Plus( Minus( countEmptyCellInCol  countEmptyCellInCol )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  Minus( Mod( Minus( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  Multi( Plus( Mod( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) )  Mod( Mod( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellInSquare  /  numOfOptionsToAppearInBoard ) * ( countEmptyCellInCol  *  countEmptyCellInCol ))) Min ((( countEmptyCellInSquare  -  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInSquareContainsNum )) - (( countEmptyCellInCol  -  countEmptyCellInCol ) + ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInCol )))) + (((( countEmptyCellsInSquareContainsNum  -  countEmptyCellInSquare ) - ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellInRow )) % (( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare ) % ( countEmptyCellsInRowsContainsNum  -  countEmptyCellInCol ))) - ((( countEmptyCellsInColsContainsNum  %  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellInSquare )) * (( NumOfOptionsInCell  %  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInCols_ThatNotContainsNum ))))),
4,19.0,3.0,10.17,Plus( Minimum( Maximum( div( Minus( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Plus( countEmptyCellInRow  NumOfOptionsInCell )  Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Plus( Minimum( Minimum( countEmptyCellInRow  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Minus( Minimum( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) ) )  Multi( div( Maximum( Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellInCol  countEmptyCellInRow )  Maximum( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard ) ) )  Maximum( Multi( div( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( NumOfOptionsInCell  NumOfOptionsInCell ) )  Minimum( div( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  -  NumOfOptionsInCell ) / ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum )) Max (( countEmptyCellInRow  +  NumOfOptionsInCell ) % ( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( countEmptyCellInRow  Min  numOfOptionsToAppearInBoard ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInColsContainsNum )) + (( countEmptyCellInCol  Min  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellsInRowsContainsNum  +  countEmptyCellInSquare )))) + (((( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquareContainsNum ) Max ( NumOfOptionsInCell  Max  countEmptyCellsInCols_ThatNotContainsNum )) / (( countEmptyCellInCol  %  countEmptyCellInRow ) + ( countEmptyCellsInSquareContainsNum  Max  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellsInColsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) * ( NumOfOptionsInCell  Max  NumOfOptionsInCell )) Max (( NumOfOptionsInCell  /  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  %  countEmptyCellInRow ))))),
5,16.0,0.0,9.85,Maximum( Minimum( Mod( Mod( Multi( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Minimum( Mod( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) ) )  div( Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  countEmptyCellInCol ) )  Plus( Minimum( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare ) ) ) )  Mod( Minimum( Mod( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) )  Maximum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minimum( countEmptyCellInRow  NumOfOptionsInCell ) ) )  Minus( Multi( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Minimum( countEmptyCellInSquare  countEmptyCellInSquare )  div( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  *  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) % (( NumOfOptionsInCell  %  numOfOptionsToAppearInBoard ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  Min  countEmptyCellInSquare ))) Min ((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInRow  *  countEmptyCellInCol )) / (( countEmptyCellInRow  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInSquare )))) Max (((( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellInRow  Min  NumOfOptionsInCell ))) % ((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum )) - (( countEmptyCellInSquare  Min  countEmptyCellInSquare ) * ( countEmptyCellInRow  /  countEmptyCellsInRowsContainsNum ))))),
