Genetic Sudoku Experiment
Experiment Time: 27/06/2016 10:27:50
Expirement Parameters:,
Orginal Empty Cells:,53,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,19.0,3.0,10.26,Plus( Plus( Minus( Mod( Minus( countEmptyCellInCol  countEmptyCellInSquare )  div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) )  Plus( Plus( div( countEmptyCellInSquare  countEmptyCellInSquare )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum ) )  Plus( Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) ) )  Plus( Multi( Multi( Maximum( countEmptyCellInRow  countEmptyCellsInColsContainsNum )  div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Minimum( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) ) )  Plus( Plus( Multi( NumOfOptionsInCell  NumOfOptionsInCell )  Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Plus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInSquare  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellInCol  -  countEmptyCellInSquare ) % ( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ))) + ((( countEmptyCellInSquare  /  countEmptyCellInSquare ) + ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInSquareContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInColsContainsNum  Max  NumOfOptionsInCell )))) + (((( countEmptyCellInRow  Max  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard )) * (( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquareContainsNum ) Min ( numOfOptionsToAppearInBoard  Max  NumOfOptionsInCell ))) + ((( NumOfOptionsInCell  *  NumOfOptionsInCell ) + ( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInSquare  +  countEmptyCellInRow ))))),
1,18.0,3.0,10.11,Maximum( Minus( Maximum( Minus( div( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  div( numOfOptionsToAppearInBoard  countEmptyCellInRow ) )  Plus( div( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) )  Minimum( Plus( Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInColsContainsNum ) )  div( Mod( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) )  Minimum( Minimum( Maximum( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) )  Multi( Minimum( countEmptyCellInSquare  NumOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  Multi( Minus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) )  Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  /  numOfOptionsToAppearInBoard ) - ( numOfOptionsToAppearInBoard  /  countEmptyCellInRow )) Max (( countEmptyCellInRow  /  countEmptyCellsInSquare_ThatNotContainsNum ) + ( numOfOptionsToAppearInBoard  %  countEmptyCellsInColsContainsNum ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) + ( countEmptyCellInSquare  *  countEmptyCellsInColsContainsNum )) Min (( countEmptyCellInRow  %  countEmptyCellsInRowsContainsNum ) / ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInRow )) Min (( countEmptyCellInSquare  Min  NumOfOptionsInCell ) * ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))) Min ((( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInRow  +  countEmptyCellsInColsContainsNum )) * (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellsInRows_ThatNotContainsNum ))))),
2,19.0,3.0,10.07,Maximum( Mod( Minimum( Maximum( div( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) )  Maximum( Minus( countEmptyCellInSquare  countEmptyCellInRow )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Minimum( Minus( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Maximum( Minus( countEmptyCellInRow  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Minimum( Minimum( Maximum( Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) )  Multi( Minimum( countEmptyCellInSquare  NumOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) )  Multi( Minus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) )  Plus( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInRow  /  countEmptyCellInRow ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInSquare  -  countEmptyCellInRow ) Max ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInCol ))) % ((( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellInRow  -  NumOfOptionsInCell ) Max ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInColsContainsNum )))) Max (((( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInRow )) Min (( countEmptyCellInSquare  Min  NumOfOptionsInCell ) * ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))) Min ((( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInRow  +  countEmptyCellsInColsContainsNum )) * (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ) + ( countEmptyCellInRow  /  countEmptyCellsInRows_ThatNotContainsNum ))))),
3,18.0,2.0,9.84,Maximum( Minimum( Minus( Minus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellInSquare  countEmptyCellInSquare ) )  Plus( div( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Plus( Minus( Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  div( countEmptyCellInCol  countEmptyCellInCol ) )  div( Minimum( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol ) ) ) )  Minimum( Mod( Mod( Mod( numOfOptionsToAppearInBoard  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Mod( div( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Plus( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) ) )  Multi( Minus( Minimum( NumOfOptionsInCell  countEmptyCellInCol )  Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Multi( Multi( countEmptyCellInCol  countEmptyCellInCol )  Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInSquare  %  countEmptyCellInSquare )) - (( countEmptyCellInSquare  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ))) Min ((( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellInCol  /  countEmptyCellInCol )) + (( NumOfOptionsInCell  Min  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInCol )))) Max (((( numOfOptionsToAppearInBoard  %  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellInSquare )) % (( countEmptyCellsInColsContainsNum  /  numOfOptionsToAppearInBoard ) % ( numOfOptionsToAppearInBoard  +  countEmptyCellInSquare ))) Min ((( NumOfOptionsInCell  Min  countEmptyCellInCol ) - ( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInColsContainsNum )) * (( countEmptyCellInCol  *  countEmptyCellInCol ) * ( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInCol ))))),
4,16.0,2.0,9.37,Minus( Multi( Minimum( Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Minimum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Multi( Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) ) ) )  Maximum( Minimum( div( div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) )  Minimum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Mod( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Multi( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  *  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell )))) - (((( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) / ( numOfOptionsToAppearInBoard  Max  countEmptyCellInCol )) Min (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquareContainsNum ) * ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum ))))),
5,17.0,3.0,9.56,Plus( Maximum( Minimum( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  div( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Mod( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Multi( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minimum( Maximum( Multi( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Maximum( NumOfOptionsInCell  countEmptyCellInCol ) )  Minus( Minus( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) ) )  Mod( div( Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Mod( Mod( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) * ( countEmptyCellInCol  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquareContainsNum ) * ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInCol ) * ( NumOfOptionsInCell  Max  countEmptyCellInCol )) Max (( NumOfOptionsInCell  -  countEmptyCellsInRows_ThatNotContainsNum ) - ( NumOfOptionsInCell  +  countEmptyCellsInSquareContainsNum ))) Min ((( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellsInColsContainsNum  -  countEmptyCellsInSquare_ThatNotContainsNum )) % (( countEmptyCellsInColsContainsNum  %  countEmptyCellInRow ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInRowsContainsNum ))))),
6,19.0,4.0,9.04,Plus( Maximum( Minimum( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  div( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Mod( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Multi( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  div( Maximum( div( Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellInCol ) )  Minus( div( countEmptyCellsInColsContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Maximum( Minus( Plus( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Minus( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) )  Mod( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) * ( countEmptyCellInCol  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInSquareContainsNum ) * ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum ) / ( countEmptyCellInCol  +  countEmptyCellInCol )) Max (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInSquare ))) / ((( countEmptyCellsInSquareContainsNum  +  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInRowsContainsNum  -  countEmptyCellsInColsContainsNum )) Max (( countEmptyCellsInSquareContainsNum  Min  countEmptyCellInSquare ) % ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow ))))),
7,16.0,4.0,8.94,Multi( Maximum( Minimum( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  div( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Mod( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Multi( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Plus( Plus( Plus( Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) ) )  Maximum( Mod( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Plus( countEmptyCellInRow  numOfOptionsToAppearInBoard ) )  Plus( Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) * ( countEmptyCellInCol  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) * ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )))) * (((( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellInCol ) + ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellsInColsContainsNum  +  NumOfOptionsInCell ))) + ((( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInRow ) % ( countEmptyCellInRow  +  numOfOptionsToAppearInBoard )) Max (( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard ) + ( countEmptyCellInRow  Min  countEmptyCellsInSquareContainsNum ))))),
8,16.0,4.0,8.34,Maximum( Mod( Plus( Plus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( div( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) ) )  Mod( Multi( Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Multi( Maximum( Minus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Maximum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) + ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum )) + (( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  -  countEmptyCellsInRowsContainsNum ))) % ((( NumOfOptionsInCell  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellInRow  *  countEmptyCellsInSquareContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum ) * ( numOfOptionsToAppearInBoard  *  countEmptyCellsInColsContainsNum )))) Max (((( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInSquare  %  NumOfOptionsInCell ))) % ((( countEmptyCellInRow  -  countEmptyCellInSquare ) Max ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  Max  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  -  countEmptyCellInCol ))))),
9,17.0,4.0,8.14,Maximum( Mod( Plus( Plus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) )  Minimum( Minus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Minus( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) )  Minus( Mod( div( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) )  Multi( Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Multi( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) ) )  Multi( Minimum( Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Minimum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Multi( Minimum( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) ) ) ) ),((((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum ) + ( NumOfOptionsInCell  *  countEmptyCellsInRowsContainsNum )) + (( countEmptyCellInRow  -  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  -  countEmptyCellsInRowsContainsNum ))) % ((( NumOfOptionsInCell  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellInRow  *  countEmptyCellsInSquareContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum ) * ( numOfOptionsToAppearInBoard  *  countEmptyCellsInColsContainsNum )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  *  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum ) Min ( numOfOptionsToAppearInBoard  Max  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell ))))),
10,17.0,3.0,8.0,Plus( Plus( Plus( Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Maximum( Minimum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum )  Multi( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) ) )  Minimum( Plus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) ) )  Multi( Minimum( Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellInRow ) ) )  Multi( div( Minimum( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInRowsContainsNum  %  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInRow )) + (( NumOfOptionsInCell  Min  countEmptyCellsInRowsContainsNum ) Max ( numOfOptionsToAppearInBoard  *  NumOfOptionsInCell ))) + ((( countEmptyCellsInSquare_ThatNotContainsNum  *  NumOfOptionsInCell ) + ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum )))) + (((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) Min (( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) / ( countEmptyCellInRow  Max  countEmptyCellInRow ))) * ((( countEmptyCellInSquare  Min  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  Max  countEmptyCellInCol ))))),
11,17.0,2.0,8.1,Minus( Multi( div( Minimum( Minimum( countEmptyCellInRow  countEmptyCellInSquare )  Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Mod( Mod( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum ) ) )  div( Maximum( Minus( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Minus( countEmptyCellInRow  countEmptyCellInSquare ) ) ) )  Multi( Minimum( Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellInCol )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Minus( Multi( countEmptyCellInRow  NumOfOptionsInCell )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  Maximum( div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellInRow  Min  countEmptyCellInSquare ) Min ( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInRowsContainsNum )) / (( countEmptyCellInSquare  %  countEmptyCellsInRows_ThatNotContainsNum ) % ( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ))) * ((( countEmptyCellInRow  -  countEmptyCellInRow ) Max ( countEmptyCellInRow  %  countEmptyCellsInCols_ThatNotContainsNum )) / (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) % ( countEmptyCellInRow  -  countEmptyCellInSquare )))) - (((( numOfOptionsToAppearInBoard  *  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Max  countEmptyCellInCol ) Max ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellInRow  *  NumOfOptionsInCell ) - ( countEmptyCellInRow  Max  NumOfOptionsInCell )) * (( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum ) Max ( NumOfOptionsInCell  %  countEmptyCellsInColsContainsNum ))))),
12,18.0,2.0,8.04,Minimum( Multi( Minimum( Multi( Plus( countEmptyCellsInSquare_ThatNotContainsNum  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Minimum( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInRow  numOfOptionsToAppearInBoard ) ) )  Multi( div( Minimum( countEmptyCellInSquare  numOfOptionsToAppearInBoard )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Maximum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Mod( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Maximum( Minus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Maximum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquare_ThatNotContainsNum  +  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum )) Min (( NumOfOptionsInCell  Min  countEmptyCellsInCols_ThatNotContainsNum ) + ( countEmptyCellInRow  *  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellInSquare  Min  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) * (( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  Max  countEmptyCellInCol )))) Min (((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  /  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell ))) % ((( countEmptyCellInRow  -  countEmptyCellInSquare ) Max ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  Max  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  -  countEmptyCellInCol ))))),
13,16.0,2.0,7.42,Maximum( Mod( Minimum( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  div( NumOfOptionsInCell  countEmptyCellsInSquare_ThatNotContainsNum ) )  Maximum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) )  Multi( Maximum( Minus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Maximum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Minimum( Multi( Multi( Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInRowsContainsNum ) ) )  Multi( Minimum( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) )  div( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  /  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInCols_ThatNotContainsNum  -  NumOfOptionsInCell ))) % ((( countEmptyCellInRow  -  countEmptyCellInSquare ) Max ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  Max  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  -  countEmptyCellInCol )))) Max (((( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ) * ( numOfOptionsToAppearInBoard  -  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInSquare ) - ( countEmptyCellInCol  *  countEmptyCellsInRowsContainsNum ))) Min ((( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInSquare  +  numOfOptionsToAppearInBoard )) * (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) / ( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellInRow ))))),
14,19.0,4.0,8.03,Plus( Maximum( Minus( Maximum( Mod( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) )  Multi( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellInSquare ) ) )  Minus( Mod( div( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Minimum( countEmptyCellsInRowsContainsNum  NumOfOptionsInCell ) )  div( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard ) ) ) )  Mod( Maximum( Mod( Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInSquare ) )  Minus( Mod( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  div( Mod( div( countEmptyCellInRow  numOfOptionsToAppearInBoard )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellInRow  %  countEmptyCellsInSquareContainsNum ) Max ( NumOfOptionsInCell  +  countEmptyCellsInColsContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInSquare_ThatNotContainsNum ) * ( countEmptyCellInSquare  -  countEmptyCellInSquare ))) Max ((( countEmptyCellsInRows_ThatNotContainsNum  /  NumOfOptionsInCell ) % ( countEmptyCellsInRowsContainsNum  Min  NumOfOptionsInCell )) - (( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) / ( numOfOptionsToAppearInBoard  /  numOfOptionsToAppearInBoard )))) + (((( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell ) % ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInSquare )) Max (( countEmptyCellsInRowsContainsNum  %  countEmptyCellInRow ) - ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ))) % ((( countEmptyCellInRow  /  numOfOptionsToAppearInBoard ) % ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInRow )) / (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ))))),
15,19.0,2.0,7.69,Plus( Mod( Multi( Minimum( Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Plus( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellInSquare  NumOfOptionsInCell ) ) )  Multi( Maximum( Minus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  div( Maximum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Minus( numOfOptionsToAppearInBoard  countEmptyCellInCol ) ) ) )  Minus( Plus( Minimum( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Minus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minimum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellInSquare  %  NumOfOptionsInCell ))) % ((( countEmptyCellInRow  -  countEmptyCellInSquare ) Max ( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum )) * (( countEmptyCellInRow  Max  countEmptyCellsInRowsContainsNum ) / ( numOfOptionsToAppearInBoard  -  countEmptyCellInCol )))) + (((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInSquareContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInSquareContainsNum  +  numOfOptionsToAppearInBoard ) Min ( numOfOptionsToAppearInBoard  -  countEmptyCellsInColsContainsNum ))) - ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))))),
16,18.0,2.0,7.35,Plus( Maximum( Minimum( Multi( Minus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  div( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) )  Minimum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol ) ) )  Maximum( Mod( Plus( countEmptyCellInRow  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Multi( Minus( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minimum( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minus( Minimum( Plus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Plus( NumOfOptionsInCell  NumOfOptionsInCell ) )  Multi( Maximum( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minimum( Minimum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  -  countEmptyCellInSquare ) * ( countEmptyCellInCol  /  countEmptyCellsInRows_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( countEmptyCellInRow  +  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInSquareContainsNum  +  countEmptyCellInRow )) Max (( countEmptyCellsInCols_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) * ( NumOfOptionsInCell  Min  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow ) + ( NumOfOptionsInCell  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  Max  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))))),
17,18.0,2.0,7.79,Plus( Minimum( div( Minus( div( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  div( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Multi( Minimum( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( div( Minimum( countEmptyCellInSquare  countEmptyCellInRow )  Multi( NumOfOptionsInCell  countEmptyCellInCol ) )  Minus( Minus( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInSquare  numOfOptionsToAppearInBoard ) ) ) )  Minus( Minimum( Plus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Plus( NumOfOptionsInCell  NumOfOptionsInCell ) )  Multi( Maximum( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minimum( Minimum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  /  countEmptyCellsInColsContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  /  countEmptyCellInRow )) / (( countEmptyCellsInRows_ThatNotContainsNum  Min  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( countEmptyCellInSquare  Min  countEmptyCellInRow ) / ( NumOfOptionsInCell  *  countEmptyCellInCol )) Min (( countEmptyCellInSquare  -  countEmptyCellsInRowsContainsNum ) - ( countEmptyCellInSquare  +  numOfOptionsToAppearInBoard )))) + (((( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow ) + ( NumOfOptionsInCell  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  Max  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol ))))),
18,18.0,0.0,7.49,Minimum( Minus( Minimum( Plus( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Plus( NumOfOptionsInCell  NumOfOptionsInCell ) )  Multi( Maximum( countEmptyCellInCol  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Minimum( Minimum( div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Maximum( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) ) ) )  Multi( Minimum( Multi( Multi( numOfOptionsToAppearInBoard  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellInCol  countEmptyCellInRow )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  numOfOptionsToAppearInBoard ) ) )  Multi( Minus( Multi( countEmptyCellInRow  NumOfOptionsInCell )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  Maximum( div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  %  countEmptyCellInRow ) + ( NumOfOptionsInCell  +  NumOfOptionsInCell )) Min (( countEmptyCellInCol  Max  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( countEmptyCellInSquare  /  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ) Max ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol )))) Min (((( numOfOptionsToAppearInBoard  *  countEmptyCellsInRows_ThatNotContainsNum ) * ( countEmptyCellInCol  *  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( countEmptyCellInCol  +  countEmptyCellInRow ) Min ( countEmptyCellsInCols_ThatNotContainsNum  Min  numOfOptionsToAppearInBoard ))) * ((( countEmptyCellInRow  *  NumOfOptionsInCell ) - ( countEmptyCellInRow  Max  NumOfOptionsInCell )) * (( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum ) Max ( NumOfOptionsInCell  %  countEmptyCellsInColsContainsNum ))))),
