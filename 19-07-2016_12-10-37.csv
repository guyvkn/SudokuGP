Genetic Sudoku Experiment
Experiment Time: 19/07/2016 12:10:37
Expirement Parameters:,
Orginal Empty Cells:,55,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,18.0,2.0,11.8,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minus( Minus( Minus( Minus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Minimum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Maximum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Multi( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( NumOfOptionsInCell  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInRow )) - (( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInSquare  *  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInSquare  *  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  Max  numOfOptionsToAppearInBoard ))))),
1,20.0,2.0,11.29,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minus( Minus( Minus( Minus( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInRow ) )  Minimum( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Maximum( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInCols_ThatNotContainsNum )  Multi( countEmptyCellInSquare  countEmptyCellsInRowsContainsNum ) )  Minimum( Multi( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Maximum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( NumOfOptionsInCell  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInRow )) - (( countEmptyCellsInColsContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ) Min ( NumOfOptionsInCell  %  countEmptyCellsInCols_ThatNotContainsNum ))) - ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInCols_ThatNotContainsNum ) Max ( countEmptyCellInSquare  *  countEmptyCellsInRowsContainsNum )) Min (( countEmptyCellInSquare  *  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellsInColsContainsNum  Max  numOfOptionsToAppearInBoard ))))),
2,17.0,2.0,11.21,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Maximum( Minimum( Minus( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Plus( numOfOptionsToAppearInBoard  NumOfOptionsInCell ) )  div( Minus( countEmptyCellInRow  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellInRow  countEmptyCellsInColsContainsNum ) ) )  div( Multi( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Minus( Mod( countEmptyCellInSquare  countEmptyCellInSquare )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInColsContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ) - ( numOfOptionsToAppearInBoard  +  NumOfOptionsInCell )) Min (( countEmptyCellInRow  -  countEmptyCellsInRows_ThatNotContainsNum ) / ( countEmptyCellInRow  -  countEmptyCellsInColsContainsNum ))) Max ((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum )) / (( countEmptyCellInSquare  %  countEmptyCellInSquare ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInColsContainsNum ))))),
3,17.0,2.0,10.74,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Plus( Plus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Mod( Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInRow  Max  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))))),
4,17.0,2.0,10.28,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Plus( Plus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Mod( Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInRow  Max  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))))),
5,21.0,2.0,10.33,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Plus( Plus( div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInRow  NumOfOptionsInCell ) )  Minus( Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Multi( Mod( Minus( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum )  div( countEmptyCellInCol  countEmptyCellsInSquareContainsNum ) )  Multi( Mod( countEmptyCellsInSquareContainsNum  numOfOptionsToAppearInBoard )  Multi( countEmptyCellsInRowsContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) + ( countEmptyCellInRow  Max  NumOfOptionsInCell )) + (( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ) - ( countEmptyCellsInRowsContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum ))) * ((( countEmptyCellInRow  -  countEmptyCellsInSquare_ThatNotContainsNum ) % ( countEmptyCellInCol  /  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellsInSquareContainsNum  %  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum ))))),
6,21.0,2.0,10.43,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minus( div( Plus( Mod( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Mod( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) )  Multi( div( countEmptyCellsInColsContainsNum  countEmptyCellsInRowsContainsNum )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Multi( Mod( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Mod( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Maximum( div( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellInSquare  %  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInSquareContainsNum  %  NumOfOptionsInCell )) / (( countEmptyCellsInColsContainsNum  /  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInRows_ThatNotContainsNum ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInRowsContainsNum ) % ( numOfOptionsToAppearInBoard  %  countEmptyCellInSquare )) * (( countEmptyCellInSquare  /  countEmptyCellsInRows_ThatNotContainsNum ) Max ( countEmptyCellsInSquareContainsNum  -  countEmptyCellInCol ))))),
7,19.0,2.0,9.98,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Plus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Minus( Minus( Multi( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellInCol  +  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) * ((( countEmptyCellsInRowsContainsNum  *  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell ) % ( countEmptyCellInCol  *  countEmptyCellInCol ))))),
8,19.0,2.0,9.5,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minimum( Plus( Plus( countEmptyCellInCol  numOfOptionsToAppearInBoard )  Plus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Plus( div( numOfOptionsToAppearInBoard  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Minus( Minus( Multi( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Mod( Plus( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellInCol  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellInCol  +  numOfOptionsToAppearInBoard ) + ( countEmptyCellsInCols_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum )) Min (( numOfOptionsToAppearInBoard  /  countEmptyCellsInSquareContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  NumOfOptionsInCell ))) * ((( countEmptyCellsInRowsContainsNum  *  numOfOptionsToAppearInBoard ) - ( countEmptyCellsInSquareContainsNum  Max  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInRows_ThatNotContainsNum  +  NumOfOptionsInCell ) % ( countEmptyCellInCol  *  countEmptyCellInCol ))))),
9,18.0,2.0,9.67,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minus( Plus( Mod( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) )  Mod( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Maximum( Plus( Maximum( NumOfOptionsInCell  numOfOptionsToAppearInBoard )  Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) % ( numOfOptionsToAppearInBoard  Min  countEmptyCellInCol )) + (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( NumOfOptionsInCell  Max  numOfOptionsToAppearInBoard ) + ( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellInSquare  +  countEmptyCellsInColsContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellsInRowsContainsNum ))))),
10,18.0,2.0,9.02,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Maximum( Mod( Minus( countEmptyCellInRow  countEmptyCellInCol )  Mod( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Plus( Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInSquareContainsNum )  Mod( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInSquare_ThatNotContainsNum )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( countEmptyCellInRow  -  countEmptyCellInCol ) % ( numOfOptionsToAppearInBoard  %  countEmptyCellsInColsContainsNum )) Max (( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInSquareContainsNum ) + ( NumOfOptionsInCell  %  countEmptyCellsInRowsContainsNum ))))),
11,20.0,2.0,8.87,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minus( Plus( Mod( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellInCol ) )  Mod( Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Maximum( Plus( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Plus( NumOfOptionsInCell  countEmptyCellsInCols_ThatNotContainsNum ) )  Minimum( Plus( countEmptyCellInSquare  countEmptyCellsInColsContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellsInRowsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInColsContainsNum ) % ( numOfOptionsToAppearInBoard  Min  countEmptyCellInCol )) + (( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInSquareContainsNum ) % ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquare_ThatNotContainsNum ))) - ((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( NumOfOptionsInCell  +  countEmptyCellsInCols_ThatNotContainsNum )) Max (( countEmptyCellInSquare  +  countEmptyCellsInColsContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellsInRowsContainsNum ))))),
12,19.0,2.0,8.32,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minimum( Multi( Minus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) )  div( div( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  Mod( Mod( Minimum( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  Minus( div( countEmptyCellInSquare  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInCol ) - ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol )) * (( countEmptyCellInSquare  /  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Min ((( countEmptyCellsInSquareContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum ) % ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum )) % (( countEmptyCellInSquare  /  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
13,21.0,2.0,7.84,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Minimum( Multi( Minus( Multi( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInCol ) )  div( div( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  countEmptyCellInRow ) ) )  div( Minus( Minimum( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) )  Mod( Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare )  Multi( countEmptyCellInCol  countEmptyCellsInColsContainsNum ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquare_ThatNotContainsNum  *  countEmptyCellInCol ) - ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInCol )) * (( countEmptyCellInSquare  /  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInColsContainsNum  -  countEmptyCellInRow ))) Min ((( countEmptyCellsInRows_ThatNotContainsNum  Min  NumOfOptionsInCell ) - ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellInRow )) / (( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare ) % ( countEmptyCellInCol  *  countEmptyCellsInColsContainsNum ))))),
14,20.0,2.0,8.35,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))))),
15,20.0,2.0,8.01,Maximum( Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Multi( Minus( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum )  Plus( countEmptyCellInCol  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) )  Multi( Minus( div( Maximum( countEmptyCellsInSquareContainsNum  countEmptyCellInSquare )  Multi( NumOfOptionsInCell  countEmptyCellInSquare ) )  Minimum( Mod( countEmptyCellInCol  countEmptyCellsInSquareContainsNum )  div( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInSquare ) ) )  Minimum( Plus( Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Minus( Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum )  Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInRow  -  countEmptyCellsInCols_ThatNotContainsNum ) * ( countEmptyCellInCol  +  countEmptyCellsInCols_ThatNotContainsNum ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell )))) Max (((( countEmptyCellsInSquareContainsNum  Max  countEmptyCellInSquare ) / ( NumOfOptionsInCell  *  countEmptyCellInSquare )) - (( countEmptyCellInCol  %  countEmptyCellsInSquareContainsNum ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  /  countEmptyCellInSquare ))) * ((( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInRows_ThatNotContainsNum )) Min (( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ))))),
16,21.0,2.0,7.54,Maximum( Maximum( Plus( Maximum( Mod( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Minimum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  Minus( Mod( countEmptyCellsInColsContainsNum  countEmptyCellInRow )  Minus( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInCol ) ) )  Multi( Plus( Minimum( NumOfOptionsInCell  countEmptyCellInRow )  Mod( countEmptyCellInCol  NumOfOptionsInCell ) )  div( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  div( countEmptyCellInRow  countEmptyCellInRow ) ) ) )  Plus( Minus( Minimum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) ) )  Minus( Minimum( div( countEmptyCellInSquare  countEmptyCellsInSquare_ThatNotContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) ) ) ) ),((((( countEmptyCellInSquare  %  countEmptyCellsInSquareContainsNum ) Max ( countEmptyCellsInColsContainsNum  Min  numOfOptionsToAppearInBoard )) + (( countEmptyCellsInColsContainsNum  %  countEmptyCellInRow ) - ( countEmptyCellsInCols_ThatNotContainsNum  -  countEmptyCellInCol ))) Max ((( NumOfOptionsInCell  Min  countEmptyCellInRow ) + ( countEmptyCellInCol  %  NumOfOptionsInCell )) * (( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) / ( countEmptyCellInRow  /  countEmptyCellInRow )))) Max (((( countEmptyCellsInSquareContainsNum  *  countEmptyCellInRow ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell )) - (( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInRow ) Min ( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol ))) + ((( countEmptyCellInSquare  /  countEmptyCellsInSquare_ThatNotContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellInRow )) - (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInRow ))))),
17,21.0,0.0,6.86,Minus( Plus( Minus( Minimum( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell ) )  Minimum( Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInRow )  Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol ) ) )  Minus( Minimum( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  Minimum( NumOfOptionsInCell  countEmptyCellInRow ) )  Minimum( Plus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Minus( Plus( Mod( Mod( countEmptyCellInRow  countEmptyCellInRow )  Plus( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Multi( Multi( countEmptyCellsInSquare_ThatNotContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellsInColsContainsNum ) ) )  div( Mod( Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Mod( numOfOptionsToAppearInBoard  countEmptyCellInSquare ) )  Plus( div( countEmptyCellInRow  countEmptyCellsInRowsContainsNum )  Maximum( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare ) ) ) ) ),((((( countEmptyCellsInSquareContainsNum  *  countEmptyCellInRow ) Min ( countEmptyCellsInRows_ThatNotContainsNum  *  NumOfOptionsInCell )) - (( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInRow ) Min ( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol ))) + ((( countEmptyCellsInSquareContainsNum  -  countEmptyCellsInRowsContainsNum ) Min ( NumOfOptionsInCell  Min  countEmptyCellInRow )) - (( countEmptyCellsInSquare_ThatNotContainsNum  +  countEmptyCellsInColsContainsNum ) Min ( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellInRow )))) - (((( countEmptyCellInRow  %  countEmptyCellInRow ) % ( numOfOptionsToAppearInBoard  +  countEmptyCellsInColsContainsNum )) + (( countEmptyCellsInSquare_ThatNotContainsNum  *  NumOfOptionsInCell ) * ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellsInColsContainsNum ))) - ((( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ) % ( numOfOptionsToAppearInBoard  %  countEmptyCellInSquare )) / (( countEmptyCellInRow  /  countEmptyCellsInRowsContainsNum ) + ( countEmptyCellsInRowsContainsNum  Max  countEmptyCellInSquare ))))),
