Genetic Sudoku Experiment
Experiment Time: 26/06/2016 12:19:23
Expirement Parameters:,
Orginal Empty Cells:,55,
Population Size:,100,
Max Generations:,50,
Crossover Probability:,0.8,
Mutation Probability:,0.2,
Percent of good indviduals from population:,0.4,
,
Primitive Set:,
Plus,Minus,Multi,div,Mod,Maximum,Minimum,
Terminal Set:,
countEmptyCellInRow,countEmptyCellInCol,countEmptyCellInSquare,NumOfOptionsInCell,numOfOptionsToAppearInBoard,countEmptyCellsInRowsContainsNum,countEmptyCellsInColsContainsNum,countEmptyCellsInSquareContainsNum,countEmptyCellsInRows_ThatNotContainsNum,countEmptyCellsInCols_ThatNotContainsNum,countEmptyCellsInSquare_ThatNotContainsNum,
,
,
Generation,Worst Individual Fitness,Best Individual Fitness,Average Fitness,Best Individual Tree - Prefix,Best Individual Tree - Infix,
0,20.0,3.0,10.42,Maximum( Minus( Mod( div( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Mod( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minus( Multi( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Maximum( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Maximum( Minus( div( Multi( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Multi( countEmptyCellsInCols_ThatNotContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInSquareContainsNum  NumOfOptionsInCell ) ) )  Plus( Multi( Minimum( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Minimum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum ) )  Mod( Multi( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum )  div( NumOfOptionsInCell  countEmptyCellInCol ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellInCol  %  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) - ((( NumOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell )) Min (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( numOfOptionsToAppearInBoard  *  countEmptyCellInRow ) / ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInCols_ThatNotContainsNum )) - (( countEmptyCellsInCols_ThatNotContainsNum  *  NumOfOptionsInCell ) / ( countEmptyCellsInSquareContainsNum  Max  NumOfOptionsInCell ))) Max ((( countEmptyCellsInColsContainsNum  Min  countEmptyCellInCol ) * ( numOfOptionsToAppearInBoard  Min  countEmptyCellsInColsContainsNum )) + (( NumOfOptionsInCell  *  countEmptyCellsInSquareContainsNum ) % ( NumOfOptionsInCell  /  countEmptyCellInCol ))))),
1,20.0,4.0,10.44,Maximum( Minus( Mod( div( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Mod( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minus( Multi( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Maximum( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minimum( Multi( Plus( Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellsInSquareContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) )  div( Minus( countEmptyCellsInRows_ThatNotContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) )  Plus( Multi( Plus( numOfOptionsToAppearInBoard  countEmptyCellInRow )  Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) )  Multi( Minus( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Plus( NumOfOptionsInCell  NumOfOptionsInCell ) ) ) ) ),((((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellInCol  %  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) - ((( NumOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell )) Min (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum )))) Max (((( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ) + ( countEmptyCellsInSquareContainsNum  +  countEmptyCellsInCols_ThatNotContainsNum )) * (( countEmptyCellsInRows_ThatNotContainsNum  -  numOfOptionsToAppearInBoard ) / ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInRows_ThatNotContainsNum ))) Min ((( numOfOptionsToAppearInBoard  +  countEmptyCellInRow ) * ( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum )) + (( countEmptyCellsInSquareContainsNum  -  countEmptyCellInCol ) * ( NumOfOptionsInCell  +  NumOfOptionsInCell ))))),
2,19.0,2.0,9.71,Plus( Minimum( div( Minus( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellInRow ) )  Minimum( div( countEmptyCellsInRowsContainsNum  numOfOptionsToAppearInBoard )  Mod( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Minus( Minimum( Multi( countEmptyCellInSquare  NumOfOptionsInCell )  Multi( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard ) )  div( Plus( countEmptyCellInRow  countEmptyCellInRow )  Mod( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellInRow ) ) ) )  Minus( Multi( div( Multi( countEmptyCellsInColsContainsNum  countEmptyCellInCol )  Maximum( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Minus( countEmptyCellInRow  countEmptyCellInSquare )  div( countEmptyCellInRow  countEmptyCellInSquare ) ) )  Maximum( Multi( Minimum( countEmptyCellInSquare  countEmptyCellsInSquareContainsNum )  Minus( countEmptyCellInCol  numOfOptionsToAppearInBoard ) )  Multi( Maximum( numOfOptionsToAppearInBoard  numOfOptionsToAppearInBoard )  Multi( countEmptyCellInRow  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellInCol ) - ( countEmptyCellsInSquare_ThatNotContainsNum  Max  countEmptyCellInRow )) / (( countEmptyCellsInRowsContainsNum  /  numOfOptionsToAppearInBoard ) Min ( countEmptyCellsInSquare_ThatNotContainsNum  %  countEmptyCellsInCols_ThatNotContainsNum ))) Min ((( countEmptyCellInSquare  *  NumOfOptionsInCell ) Min ( countEmptyCellsInColsContainsNum  *  numOfOptionsToAppearInBoard )) - (( countEmptyCellInRow  +  countEmptyCellInRow ) / ( countEmptyCellsInCols_ThatNotContainsNum  %  countEmptyCellInRow )))) + (((( countEmptyCellsInColsContainsNum  *  countEmptyCellInCol ) / ( countEmptyCellsInColsContainsNum  Max  countEmptyCellsInSquareContainsNum )) * (( countEmptyCellInRow  -  countEmptyCellInSquare ) Min ( countEmptyCellInRow  /  countEmptyCellInSquare ))) - ((( countEmptyCellInSquare  Min  countEmptyCellsInSquareContainsNum ) * ( countEmptyCellInCol  -  numOfOptionsToAppearInBoard )) Max (( numOfOptionsToAppearInBoard  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellInRow  *  countEmptyCellsInSquare_ThatNotContainsNum ))))),
3,17.0,2.0,9.28,Multi( Multi( Minimum( Multi( Maximum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Plus( countEmptyCellsInColsContainsNum  countEmptyCellInSquare ) )  Multi( Mod( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum )  Plus( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) ) )  Mod( Minimum( div( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInCols_ThatNotContainsNum )  div( NumOfOptionsInCell  countEmptyCellsInSquareContainsNum ) )  Minus( Multi( countEmptyCellsInSquareContainsNum  countEmptyCellsInColsContainsNum )  Minus( countEmptyCellInSquare  countEmptyCellInCol ) ) ) )  Maximum( Multi( Minus( Maximum( numOfOptionsToAppearInBoard  countEmptyCellsInColsContainsNum )  Maximum( countEmptyCellInRow  countEmptyCellsInRowsContainsNum ) )  Maximum( div( countEmptyCellsInSquareContainsNum  countEmptyCellInCol )  Minimum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) )  Maximum( Minimum( Minus( countEmptyCellsInSquare_ThatNotContainsNum  countEmptyCellsInRows_ThatNotContainsNum )  Multi( countEmptyCellInRow  countEmptyCellInSquare ) )  Minus( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquareContainsNum )  Plus( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInSquare_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  Max  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInColsContainsNum  +  countEmptyCellInSquare )) Min (( countEmptyCellsInRows_ThatNotContainsNum  %  countEmptyCellsInRowsContainsNum ) * ( countEmptyCellInRow  +  countEmptyCellsInRowsContainsNum ))) * ((( countEmptyCellsInCols_ThatNotContainsNum  /  countEmptyCellsInCols_ThatNotContainsNum ) Min ( NumOfOptionsInCell  /  countEmptyCellsInSquareContainsNum )) % (( countEmptyCellsInSquareContainsNum  *  countEmptyCellsInColsContainsNum ) - ( countEmptyCellInSquare  -  countEmptyCellInCol )))) * (((( numOfOptionsToAppearInBoard  Max  countEmptyCellsInColsContainsNum ) - ( countEmptyCellInRow  Max  countEmptyCellsInRowsContainsNum )) * (( countEmptyCellsInSquareContainsNum  /  countEmptyCellInCol ) Max ( countEmptyCellsInCols_ThatNotContainsNum  Min  countEmptyCellsInSquare_ThatNotContainsNum ))) Max ((( countEmptyCellsInSquare_ThatNotContainsNum  -  countEmptyCellsInRows_ThatNotContainsNum ) Min ( countEmptyCellInRow  *  countEmptyCellInSquare )) Max (( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquareContainsNum ) - ( countEmptyCellsInRows_ThatNotContainsNum  +  countEmptyCellsInSquare_ThatNotContainsNum ))))),
4,19.0,0.0,9.14,Plus( div( Minimum( Minimum( Mod( countEmptyCellsInRows_ThatNotContainsNum  NumOfOptionsInCell )  Maximum( countEmptyCellsInCols_ThatNotContainsNum  countEmptyCellsInSquareContainsNum ) )  Minimum( Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRowsContainsNum )  Multi( countEmptyCellInRow  countEmptyCellsInCols_ThatNotContainsNum ) ) )  Mod( Multi( Maximum( countEmptyCellsInColsContainsNum  numOfOptionsToAppearInBoard )  Minimum( countEmptyCellsInRowsContainsNum  countEmptyCellsInRowsContainsNum ) )  Minus( Minus( countEmptyCellsInRowsContainsNum  countEmptyCellInSquare )  Minus( countEmptyCellInCol  countEmptyCellsInRows_ThatNotContainsNum ) ) ) )  Minus( Mod( div( Mod( countEmptyCellsInColsContainsNum  countEmptyCellsInSquare_ThatNotContainsNum )  Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInRowsContainsNum ) )  Multi( Mod( countEmptyCellInCol  countEmptyCellsInColsContainsNum )  Minimum( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum ) ) )  Minimum( Minus( Multi( NumOfOptionsInCell  countEmptyCellsInRows_ThatNotContainsNum )  Minus( countEmptyCellsInColsContainsNum  NumOfOptionsInCell ) )  Maximum( Multi( countEmptyCellsInRows_ThatNotContainsNum  countEmptyCellsInColsContainsNum )  Mod( countEmptyCellsInSquareContainsNum  countEmptyCellsInRows_ThatNotContainsNum ) ) ) ) ),((((( countEmptyCellsInRows_ThatNotContainsNum  %  NumOfOptionsInCell ) Min ( countEmptyCellsInCols_ThatNotContainsNum  Max  countEmptyCellsInSquareContainsNum )) Min (( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRowsContainsNum ) Min ( countEmptyCellInRow  *  countEmptyCellsInCols_ThatNotContainsNum ))) / ((( countEmptyCellsInColsContainsNum  Max  numOfOptionsToAppearInBoard ) * ( countEmptyCellsInRowsContainsNum  Min  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellsInRowsContainsNum  -  countEmptyCellInSquare ) - ( countEmptyCellInCol  -  countEmptyCellsInRows_ThatNotContainsNum )))) + (((( countEmptyCellsInColsContainsNum  %  countEmptyCellsInSquare_ThatNotContainsNum ) / ( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInRowsContainsNum )) % (( countEmptyCellInCol  %  countEmptyCellsInColsContainsNum ) * ( countEmptyCellsInRows_ThatNotContainsNum  Min  countEmptyCellsInColsContainsNum ))) - ((( NumOfOptionsInCell  *  countEmptyCellsInRows_ThatNotContainsNum ) - ( countEmptyCellsInColsContainsNum  -  NumOfOptionsInCell )) Min (( countEmptyCellsInRows_ThatNotContainsNum  *  countEmptyCellsInColsContainsNum ) Max ( countEmptyCellsInSquareContainsNum  %  countEmptyCellsInRows_ThatNotContainsNum ))))),
